/*		Android
*	http://www.nodeclipse.org/projects/gradle
* Nodeclipse/Enide build.gradle template for classic Android project
*	https://github.com/Nodeclipse/nodeclipse-1/blob/master/org.nodeclipse.enide.editors.gradle/docs/android/build.gradle
* Gradle Plugin User Guide:
*	http://tools.android.com/tech-docs/new-build-system/user-guide
*/
println GradleVersion.current().prettyPrint()
assert gradle.gradleVersion >= "1.10"
task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

buildscript {
    repositories {
        mavenCentral()
        //jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
        // https://github.com/novoda/gradle-android-command-plugin
        classpath 'com.novoda:gradle-android-command-plugin:1.2.1'
        //classpath 'org.batcha.gradle.plugins:git-dependencies:0.2'
    }
}
//apply plugin: 'git-dependencies'
apply plugin: 'android'

dependencies {
    repositories {
        mavenCentral()
        //jcenter()
    }
    compile fileTree(dir: 'libs', include: '*.jar')
    
    // support old devices!  :D
    // compile 'com.android.support:support-v4:18.0.+'
    // compile 'com.android.support:support-v7:18.0.+'

    //compile 'com.anjlab.android:android-async-http:1.0.2'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.2'
    compile 'org.apache.commons:commons-io:1.3.2'
    compile 'org.apache.commons:commons-lang3:3.3.2'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.1'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.1.1'
    //compile 'org.scribe:scribe:1.3.5'
    //compile('org.scribe:scribe:1.3.7') {
    //    ext.git = 'https://github.com/fernandezpablo85/scribe-java/'
    //    ext.gitVersion = '1.3.7'
    //}
    compile project(':ext:ActiveAndroid')
    //compile project(':ext:scribe-java')

    // http://blog.futurice.com/android_unit_testing_in_ides_and_ci_environments
    //androidTestCompile fileTree(dir: 'tests', include: '*.java')
    androidTestCompile 'junit:junit:4.+'
    androidTestCompile 'org.skyscreamer:jsonassert:1.2.3'
    androidTestCompile files("$project.buildDir/classes/debug")
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0" // "19.0.3" for 0.10

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        androidTest.setRoot('tests')

        // Move the tests to tests/java, tests/res, etc...
        //androidTest.setRoot('tests')
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
	exclude 'LICENSE.txt'
    }

    defaultConfig {
        testApplicationId "as.streamed.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        testFunctionalTest true
    }

}

//} "boilerplate part"

android {
    lintOptions {
        abortOnError false
        //checkReleaseBuilds false
    }
}

// runAndroidApplication
task run (type: Exec, dependsOn: ':installDebug') << {
	//TODO update Activity name below or find a way to get it from AndroidManifest.xml
	if (System.properties['os.name'].toLowerCase().contains('windows')) {
	    // windows
	    commandLine 'cmd', '/c', 'adb', 'shell', 'am', 'start', '-n', "com.example.androidapptorun.MainActivity"      
	} else {
	    // linux 
	    commandLine 'adb', 'shell', 'am', 'start', '-n', "com.example.androidapptorun.MainActivity"
	}
}

apply plugin: 'android-command'
// https://github.com/novoda/gradle-android-command-plugin
