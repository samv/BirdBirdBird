/*		Android
*	http://www.nodeclipse.org/projects/gradle
* Nodeclipse/Enide build.gradle template for classic Android project
*	https://github.com/Nodeclipse/nodeclipse-1/blob/master/org.nodeclipse.enide.editors.gradle/docs/android/build.gradle
* Gradle Plugin User Guide:
*	http://tools.android.com/tech-docs/new-build-system/user-guide
*/
println GradleVersion.current().prettyPrint()
assert gradle.gradleVersion >= "1.10"
task wrapper(type: Wrapper) {
    gradleVersion = '1.12'
}

buildscript {
    repositories {
        mavenCentral()
        //jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.11.+'
        // https://github.com/novoda/gradle-android-command-plugin
        classpath 'com.novoda:gradle-android-command-plugin:1.2.1'
    }
}
apply plugin: 'android'

dependencies {
    repositories {
        mavenCentral()
        //jcenter()
    }
    compile fileTree(dir: 'libs', include: '*.jar')
    
    // support old devices!  :D
    // compile 'com.android.support:support-v4:18.0.+'
    // compile 'com.android.support:support-v7:18.0.+'

    compile 'com.google.code.gson:gson:2.2.4'

    // http://blog.futurice.com/android_unit_testing_in_ides_and_ci_environments
    //androidTestCompile 'as.streamed.test:streamtest-solo:0.1'
    //androidTestCompile 'org.robolectric:robolectric:2.+'
    //androidTestCompile 'junit:junit:4.+'

    compile project(':ext:ActiveAndroid')
}

android {
    compileSdkVersion 19
    buildToolsVersion "19.1.0" // "19.0.3" for 0.10

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}
//} "boilerplate part"

/*
android {
    lintOptions {
        //checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }
}
*/

// runAndroidApplication
task run (type: Exec, dependsOn: ':installDebug') << {
	//TODO update Activity name below or find a way to get it from AndroidManifest.xml
	if (System.properties['os.name'].toLowerCase().contains('windows')) {
	    // windows
	    commandLine 'cmd', '/c', 'adb', 'shell', 'am', 'start', '-n', "com.example.androidapptorun.MainActivity"      
	} else {
	    // linux 
	    commandLine 'adb', 'shell', 'am', 'start', '-n', "com.example.androidapptorun.MainActivity"
	}
}

apply plugin: 'android-command'
// https://github.com/novoda/gradle-android-command-plugin
